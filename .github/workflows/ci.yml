name: "Go Build Test And Release"

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build:
    name: "Build - Test - Release"
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.21"]
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly
      GOPROXY: https://proxy.golang.org

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run build
        run: ./taskfile ci:build

      - name: Run test
        run: ./taskfile ci:test

      - name: Run clean
        run: ./taskfile ci:clean

      # snapshot release for non tag pushes, no artifacts published
      - name: Run snapshot release
        if: github.ref_type != 'tag' && matrix.os == 'ubuntu-latest' # prevent releasing twice
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "~> v2"
          args: release --snapshot --skip=publish --clean

      # full release for tags with all artifacts published to GitHub releases
      - name: Run full release
        if: github.ref_type == 'tag' && matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
