name: "Go Build Test And Release"

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build:
    name: "Build - Test - Release"
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.21"]
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly
      GOPROXY: https://proxy.golang.org

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run build
        run: ./taskfile ci:build

      - name: Run test
        run: ./taskfile ci:test

      - name: Run clean
        run: ./taskfile ci:clean

      - name: Debug GitHub context
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.ref_type: ${{ github.ref_type }}"
          echo "Is tag check: ${{ startsWith(github.ref, 'refs/tags/') }}"

      # snapshot release for non tag pushes, no artifacts published
      - name: Run snapshot release
        if: "!startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'"
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "~> v2"
          args: release --snapshot --skip=publish --clean

      # full release for tags with all artifacts published to GitHub releases
      - name: Run full release
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GO_RELEASER_HOMEBREW_TAP }}
